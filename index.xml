<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Mads Kjeldgaard</title>
    <link>http://madskjeldgaard.dk/</link>
    <description>Recent content on Mads Kjeldgaard</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-uk</language>
    <lastBuildDate>Tue, 14 Apr 2020 10:41:44 +0200</lastBuildDate>
    
	<atom:link href="http://madskjeldgaard.dk/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Sketch for a granular cloud generator in SuperCollider</title>
      <link>http://madskjeldgaard.dk/posts/kloudgenerator-sketch/</link>
      <pubDate>Fri, 21 Aug 2020 11:14:29 +0200</pubDate>
      
      <guid>http://madskjeldgaard.dk/posts/kloudgenerator-sketch/</guid>
      <description>A cloud generator is basically a synthesis process that generates a lot of micro sound events (grains) at the same time. This as a whole becomes a bigger textural structure called a &amp;ldquo;cloud&amp;rdquo; generally.
  I have done a lot of experiments lately using SuperCollider&amp;rsquo;s pattern library to sequence micro compositions on a per-sound-particle basis, but to take a break from that work (which rarely leads to succesful results I have to say), I challenged myself a bit and tried to make an audio rate granular synthesis cloud generator.</description>
    </item>
    
    <item>
      <title>Software</title>
      <link>http://madskjeldgaard.dk/pages/software/</link>
      <pubDate>Fri, 19 Jun 2020 09:30:50 +0200</pubDate>
      
      <guid>http://madskjeldgaard.dk/pages/software/</guid>
      <description>Most of the software I develop as part of my practice is made available on Github.
Instruments / Systems  vortex - A system for turbulent tape music akkorder - This repo contains the code used to generate the pieces for the release &amp;ldquo;Akkorder&amp;rdquo; by Mads Kjeldgaard.  Command line tools  osccli - OSC Communication on the command line. Written in fast and safe Rust. cookiecutter quark - A cookiecutter template to help you automatically generate a SuperCollider Quark (package) sox-tricks - Command line tools that make batch processing, editing and organization of audio files a fast and painless task.</description>
    </item>
    
    <item>
      <title>Raspberry Pi 4: Simple Button to OSC example in Rust</title>
      <link>http://madskjeldgaard.dk/posts/raspi-4-gpio-button-rust/</link>
      <pubDate>Thu, 11 Jun 2020 16:49:29 +0200</pubDate>
      
      <guid>http://madskjeldgaard.dk/posts/raspi-4-gpio-button-rust/</guid>
      <description>Today I did a small experiment with my Raspberry Pi 4: I wanted to poll the GPIO data pins and use data from them in SuperCollider. This is best done by polling the pins in a separate program and then sending that data to SuperCollider via OSC.
I have done this in Python before but I much prefer doing this kind of thing in Rust since the latter is fast and safe (and just generally: I love Rust!</description>
    </item>
    
    <item>
      <title>Setting up Vim and YouCompleteMe for Rust development</title>
      <link>http://madskjeldgaard.dk/posts/rust-ycm/</link>
      <pubDate>Thu, 11 Jun 2020 11:07:41 +0200</pubDate>
      
      <guid>http://madskjeldgaard.dk/posts/rust-ycm/</guid>
      <description>These are notes for setting up YouCompleteMe - a program for autocompletion, code linting and debugging in the text editor Vim - for developing Rust programs. I find this program vital to my Rust workflow because it allows me to more easily explore code and correct mistakes before they reach the compiler. YouCompleteMe will tell you if there are syntactic mistakes in your code, it will tell you about unused variables and code and it will often suggest changes to problematic code.</description>
    </item>
    
    <item>
      <title>Interview with Passive/Aggressive</title>
      <link>http://madskjeldgaard.dk/posts/interview-pa-2020/</link>
      <pubDate>Sat, 06 Jun 2020 14:11:05 +0200</pubDate>
      
      <guid>http://madskjeldgaard.dk/posts/interview-pa-2020/</guid>
      <description>At the beginning of the Covid-19 crisis the Danish artist Claus Haxholm reached out to me to do an interview by email. It turned out to be a lengthy email exchange which resulted in an interview available on the Danish music website Passive/Aggressive.
In the interview (which is in Danish unfortunately) I talk about the brain, morphology, Norway, time and different speculative subjects related to computer music, as well as my Vortex system.</description>
    </item>
    
    <item>
      <title>Movies</title>
      <link>http://madskjeldgaard.dk/pages/movies/</link>
      <pubDate>Wed, 27 May 2020 22:25:05 +0200</pubDate>
      
      <guid>http://madskjeldgaard.dk/pages/movies/</guid>
      <description>   title director country year     La Vie de Jésus Bruno Dumont France 1997   P&amp;rsquo;tit Quinquin Bruno Dumont France 2014   L&amp;rsquo;Humanité Bruno Dumont France 1999   Elle Paul Verhoeven France 2016   Le Samouraï Jean-Pierre Melville France 1967   Le feu follet Louis Malle France 1963   Ascenseur pour l&amp;rsquo;échafaud Louis Malle France 1958   Alphaville Jean-Luc Godard France 1965   Pierrot le Fou Jean-Luc Godard France 1965   Weekend Jean-Luc Godard France 1967   À bout de souffle Jean-Luc Godard France 1960   Lady Snowblood Toshiya Fujita Japan 1973   Throne of Blood Akira Kurosawa Japan 1957   Ikiru Akira Kurosawa Japan 1952   Woman in the Dunes Hiroshi Teshigahara Japan 1964   Hiroshima Mon Amour Alain Resnais Japan 1959   Shoplifters Hirokazu Koreeda Japan 2018   Nobody Knows Hirokazu Koreeda Japan 2004   Still Walking Hirokazu Koreeda Japan 2008   The Wailing Hong-jin Na Korea 2016   Chaser Hong-jin Na Korea 2008   Peppermint Candy Chang-dong Lee Korea 1999   Secret Sunshine Chang-dong Lee Korea 2007   Yi Yi Edward Yang Taiwan 2000   Taipei Story Edward Yang Taiwan 1985   Right Now, Wrong Then Sang-soo Hong Korea 2015   Night and Day Sang-soo Hong Korea 2008   The Handmaiden Chan-wook Park Korea 2016   Alien director country year   Lost in Translation director country year   Festen director country year   Song from The Second Floor director country year   Bullhead director country year   Stranger By The Lake director country year   A Separation director country year   Caché director country year   Posession director country year   Revanche Götz Spielmann Austria 2008   Winter&amp;rsquo;s Bone Debra Granik USA 2010   Tom at the Farm Xavier Dolan Canada 2013   Down Terrace Ben Wheatley UK 2009   Amour Michael haneke France 2012   Antichrist Lars von Trier Denmark 2009   Night of the Hunter Charles Laughton USA 1955   Love Streams John Cassavetes USA 1984   Borgman Alex van Warmerdam Netherlands 2013   Naked Mike Leigh Britain 1993    </description>
    </item>
    
    <item>
      <title>Control voltage and SuperCollider: Using the open source module Ornament &amp; Crime as a midi-cv interface</title>
      <link>http://madskjeldgaard.dk/posts/hemisphere/</link>
      <pubDate>Sun, 24 May 2020 10:10:40 +0200</pubDate>
      
      <guid>http://madskjeldgaard.dk/posts/hemisphere/</guid>
      <description>My Ornament &amp;amp; Crime build (the Mini OC version). The USB connector on the Teensy on the back of the module has been rewired to a Neutrik USB connector attached to a panel next to it (the grey panel).
I have tried quite a few different approaches to integrating my modular synthesizer with my SuperCollider workflow and I have found most them to be disappointing, extremely expensive and or inflexible.</description>
    </item>
    
    <item>
      <title>Vortex: A system for turbulent tape music</title>
      <link>http://madskjeldgaard.dk/projects/vortex/</link>
      <pubDate>Fri, 22 May 2020 10:56:16 +0200</pubDate>
      
      <guid>http://madskjeldgaard.dk/projects/vortex/</guid>
      <description>Vortex is an open source computer music system by Mads Kjeldgaard for improvisation and composition. It is written as a package for the SuperCollider programming environment.
It is inspired by reel to reel tape recorders, cybernetic and feedback music as well as more contemporary generative systems.
At it&amp;rsquo;s core it has a complex web of sound processes divided in voices, all of them interconnected in feedback paths and outputting their sound to digital looping varispeed tape reels.</description>
    </item>
    
    <item>
      <title>Networked audio using Raspberry Pi 4 (zita-njbridge and SuperCollider)</title>
      <link>http://madskjeldgaard.dk/posts/raspi-zita-njbridge/</link>
      <pubDate>Sun, 03 May 2020 10:17:27 +0200</pubDate>
      
      <guid>http://madskjeldgaard.dk/posts/raspi-zita-njbridge/</guid>
      <description>Jack is an incredibly flexible piece of software for making audio connections. It&amp;rsquo;s mostly used to connect and patch virtually within one computer but it has a range of amazing extra features for connecting things in alternative ways.
This is exploited to it&amp;rsquo;s fullest in the zita-njbridge package.
To quote from the manual on zita-njbridge:
 The zita-j2n (sender) and zita-n2j (receiver) applications allow to exchange up to 64 channels of full-quality uncompressed audio streams between two or more systems running the Jack audio server.</description>
    </item>
    
    <item>
      <title>Notes for setting up a Raspberry Pi 4 for audio work</title>
      <link>http://madskjeldgaard.dk/posts/raspi4-notes/</link>
      <pubDate>Thu, 30 Apr 2020 16:07:22 +0200</pubDate>
      
      <guid>http://madskjeldgaard.dk/posts/raspi4-notes/</guid>
      <description>These are notes for setting up a Raspberry Pi 4 single board computer for pro audio work. Specifically for running SuperCollider programs for interactive installations.
I used Raspbian Lite for this, since my intention is to run the Raspberry Pi in headless mode, meaning using no display and no desktop environment (to save resources).
It is presumed that you have installed Raspbian on an SD card, with ssh enabled (allowing you to log in to the pi over the network and execute commands using a terminal), and that you are logged in.</description>
    </item>
    
    <item>
      <title>Awesome SuperCollider: A curated list</title>
      <link>http://madskjeldgaard.dk/posts/awesome-sc/</link>
      <pubDate>Thu, 30 Apr 2020 12:57:31 +0200</pubDate>
      
      <guid>http://madskjeldgaard.dk/posts/awesome-sc/</guid>
      <description>A while ago I started compiling a list of links to SuperCollider based things that I found interesting and wanted to save for later.
The list grew and at one point I organized it all in one public repository where the SuperCollider community could help curate links to awesome SuperCollider things and it has since then become a truly rich resource for things like tutorials, reading material, nice projects and tools.</description>
    </item>
    
    <item>
      <title>Work</title>
      <link>http://madskjeldgaard.dk/pages/work/</link>
      <pubDate>Thu, 30 Apr 2020 12:48:40 +0200</pubDate>
      
      <guid>http://madskjeldgaard.dk/pages/work/</guid>
      <description>3D audio Verdenskværnen
I solens flint 1000 floder
Releases      </description>
    </item>
    
    <item>
      <title>On Rust, OSC and creative coding in nannou</title>
      <link>http://madskjeldgaard.dk/posts/nannou-osc-guides/</link>
      <pubDate>Sun, 26 Apr 2020 15:02:49 +0200</pubDate>
      
      <guid>http://madskjeldgaard.dk/posts/nannou-osc-guides/</guid>
      <description>Nannou is a relatively new framework for creative coding ⨪ kind of like processing, openFrameworks and cinder.
A creative coding framework usually consists of a cluster of tools for working creatively with audio, visuals, robotics, lasers and many other things in one coding framework, and nannou is no different.
The great thing about nannou is that it is a framework making use of the cool new systems programming language Rust.</description>
    </item>
    
    <item>
      <title>I Solens Flint 1000 floder</title>
      <link>http://madskjeldgaard.dk/work/i-solens-flint/</link>
      <pubDate>Sun, 26 Apr 2020 11:06:16 +0200</pubDate>
      
      <guid>http://madskjeldgaard.dk/work/i-solens-flint/</guid>
      <description>“I solens flint 1000 floder” is an electronic composition by Mads Kjeldgaard comissioned by Notam and Ultima Festival 2019.
It was composed in 7th order ambisonics, partly at NOTAM in Oslo, Norway, and partly at EMS, Stockholm, Sweden, for a 3D audio speaker dome set up in Oslo as part of Ultima Festival 2019.
The title (which is in Danish) can be translated to something along the lines of “In the shard of the sun 1000 rivers”.</description>
    </item>
    
    <item>
      <title>Verdenskvaernen</title>
      <link>http://madskjeldgaard.dk/work/verdenskvaernen/</link>
      <pubDate>Sun, 26 Apr 2020 11:06:06 +0200</pubDate>
      
      <guid>http://madskjeldgaard.dk/work/verdenskvaernen/</guid>
      <description>Verdenskværnen (&amp;ldquo;The world grinder&amp;rdquo;) is a composition inspired by the Swedish author August Strindberg&amp;rsquo;s rambling, autobiographical novel &amp;ldquo;Inferno&amp;rdquo; (1898) as well as the sounds of gentrification.
It explores different ideas of sonic tactility in it&amp;rsquo;s sound material.
 &amp;ldquo;The sun shines, everyday life proceeds on its usual course, the cheerful bustle of business raises the spirits. Then one feels rebellious, and challenges heaven with doubts. But when night, silence, and loneliness reign, the heart beats, and the breast suffers from constriction.</description>
    </item>
    
    <item>
      <title>SoX tutorial: SoX on Android</title>
      <link>http://madskjeldgaard.dk/posts/sox-tutorial-sox-on-android/</link>
      <pubDate>Sun, 26 Apr 2020 10:21:42 +0200</pubDate>
      
      <guid>http://madskjeldgaard.dk/posts/sox-tutorial-sox-on-android/</guid>
      <description>In this tutorial, I will cover how to install and setup SoX on android devices using Termux.
Termux is a free “Android terminal emulator and Linux environment app that works directly with no rooting or setup required”.
Basically it is a command line interface for your Android device and works like a small linux distribution. It even includes a package management system. And if you get something like an OTG-dongle you can even connect a keyboard and/or a class compliant sound interface.</description>
    </item>
    
    <item>
      <title>SoX tutorial: Batch processing audio on the command line</title>
      <link>http://madskjeldgaard.dk/posts/sox-tutorial-batch-processing/</link>
      <pubDate>Sun, 26 Apr 2020 10:07:25 +0200</pubDate>
      
      <guid>http://madskjeldgaard.dk/posts/sox-tutorial-batch-processing/</guid>
      <description>To make full use of SoX&amp;rsquo; potential for batch processing we will be using a bit of command line wizardry.
The idea is to put our sox command inside of a for-loop which iterates over all audio files in the folder you are currently in. If you are unsure of what folder your terminal is executing from, you can write pwd to see it&amp;rsquo;s full path and ls to see the folder&amp;rsquo;s contents.</description>
    </item>
    
    <item>
      <title>SoX tutorial: Split by silence</title>
      <link>http://madskjeldgaard.dk/posts/sox-tutorial-split-by-silence/</link>
      <pubDate>Sun, 26 Apr 2020 01:07:33 +0200</pubDate>
      
      <guid>http://madskjeldgaard.dk/posts/sox-tutorial-split-by-silence/</guid>
      <description>SoX has a very effective and rather precise way of semi-automatically chopping a sound file into smaller sound files.
Let us say you have a sound file containing many different sounds seperated by a bit of silence in between. It could be a series of drum hits that you have recorded off of a drum machine. To make these sounds easy to use, you most probably need them as seperate sound files so you can load them into a sampler or other software as a sample bank of sorts.</description>
    </item>
    
    <item>
      <title>SoX tutorial: Command line tape music (an introduction)</title>
      <link>http://madskjeldgaard.dk/posts/sox-tutorial-cli-tape-music/</link>
      <pubDate>Sun, 26 Apr 2020 00:00:44 +0200</pubDate>
      
      <guid>http://madskjeldgaard.dk/posts/sox-tutorial-cli-tape-music/</guid>
      <description>SoX is a very powerful command line audio processing tool. You can think of it as a sort of command line equivalent of Audacity but with a text based interface that let&amp;rsquo;s you perform powerful audio operations by typing just a few words in your computer&amp;rsquo;s terminal.
I came across SoX via the live coding community where it is a popular tool for chopping sound files (by detecting silence) and batch processing large quantities of audio files (eg.</description>
    </item>
    
    <item>
      <title>About</title>
      <link>http://madskjeldgaard.dk/pages/about/</link>
      <pubDate>Tue, 14 Apr 2020 10:41:44 +0200</pubDate>
      
      <guid>http://madskjeldgaard.dk/pages/about/</guid>
      <description>Bio Mads Kjeldgaard (b. 1988 Horsens, Denmark) is an electronic music composer.
He has studied Electronic Music Composition at the Danish Institute of Electronic Music (DIEM) at the Royal Academy of Music and has a degree in journalism from the Danish School of Media and Journalism.
He works at The Norwegian Center for Arts and Technology (aka Notam) in Oslo and is part of nyMusikk’s Composer Group.
As a developer, he contributes to various open source software projects related to digital art.</description>
    </item>
    
    <item>
      <title>Concerts</title>
      <link>http://madskjeldgaard.dk/pages/concerts/</link>
      <pubDate>Tue, 14 Apr 2020 10:41:44 +0200</pubDate>
      
      <guid>http://madskjeldgaard.dk/pages/concerts/</guid>
      <description>Past concerts:
September 20th-21st, Ultima Festival @ Sentralen. World premiere of 3D audio piece &amp;ldquo;I solens flint 1000 floder&amp;rdquo; + ambisonic remixes of classic works of Else Marie Pade, Bernard Parmegiani and Edgar(d) Varése.
June 17th, SCOslo community concert @ Notam.
April 28th, IAC, Malmø, Sweden @ INTONAL Festival. Acousmatic concert with Giuseppe Pisano
March 9th, 2019, Kulturhuset, Oslo, Norway @ Fritt Fall. Livecode / improvisation.
December 6th, 2018, Cappelens Forslag, Oslo, Norway @ Hollow Body Timbals release.</description>
    </item>
    
    <item>
      <title>contact</title>
      <link>http://madskjeldgaard.dk/pages/contact/</link>
      <pubDate>Tue, 14 Apr 2020 10:41:44 +0200</pubDate>
      
      <guid>http://madskjeldgaard.dk/pages/contact/</guid>
      <description>Email: mail ☺ madskjeldgaard.dk
Github: madskjeldgaard
Instagram: @mads_kjeldgaard
YouTube: youtube
Configuration files: dotfiles</description>
    </item>
    
    <item>
      <title>NeoVim setup for c&#43;&#43; and openFrameworks development</title>
      <link>http://madskjeldgaard.dk/neovim-setup-for-c-and-openframeworks-development/</link>
      <pubDate>Mon, 06 Apr 2020 15:44:23 +0000</pubDate>
      
      <guid>http://madskjeldgaard.dk/neovim-setup-for-c-and-openframeworks-development/</guid>
      <description>It is possible to get a nice development environment on Linux (and other platforms) using NeoVim and a few plugins and settings.
This dev environment includes snippets, autocomplete, debugging and smart code suggestions for methods.
I got a lot of pointers for this setup from Chendi Xue’s blogpost about Vim/CPP development.
So, without further ado here are my notes for setting up shop using YouCompleteMe, UltiSnips and some formatting plugins.</description>
    </item>
    
    <item>
      <title>SuperCollider workshop at Notam, january 2020: Algorithmic composition using patterns</title>
      <link>http://madskjeldgaard.dk/supercollider-workshop-at-notam-january-2020-algorithmic-composition-using-patterns/</link>
      <pubDate>Thu, 23 Jan 2020 21:18:29 +0000</pubDate>
      
      <guid>http://madskjeldgaard.dk/supercollider-workshop-at-notam-january-2020-algorithmic-composition-using-patterns/</guid>
      <description>Here are the slides for the SuperCollider workshop at Notam, january 2020.
Download slides
 Algorithmic composition using patterns Notam, january 2020  About me  Name: Mads Kjeldgaard Occupation: Composer and developer Work: The Norwegian Center for Technology and Art (Notam)   Notam  Development for art projects (hardware, software, tech and artistic guidance) Communities / meetups (SC meetup among others), see website notam.no Studios / 3D sound / VR / Visuals / Electronics Courses   My practice  Computer music / livecoding Concrete music Cybernetic / systemic music   Contact info  mail: mail@madskjeldgaard.</description>
    </item>
    
    <item>
      <title>Pattern workshop, Herlev Bibliotek 2019</title>
      <link>http://madskjeldgaard.dk/pattern-workshop-herlev-bibliotek-2019/</link>
      <pubDate>Wed, 06 Nov 2019 11:22:54 +0000</pubDate>
      
      <guid>http://madskjeldgaard.dk/pattern-workshop-herlev-bibliotek-2019/</guid>
      <description>Here are the materials for the SuperCollider workshop at Herlev Bibliotek, Denmark, November 2019.
The SynthDef used for the workshop [can be downloaded here.][1]
Download slides here.
 SuperCollider workshop Herlev Bibliotek, Denmark, 2019  About me  Name: Mads Kjeldgaard Occupation: Composer and developer Work: The Norwegian Center for Technology and Art (Notam)    Notam  Development for art projects (hardware, software, tech and artistic guidance) Communities / meetups (SC meetup among others) Studios / 3D sound / VR / Visuals Courses   My practice  Computer music / livecoding Field recording 3D sound composition Sound environments   Contact info  mail: mail@madskjeldgaard.</description>
    </item>
    
    <item>
      <title>How to change the default synth in SuperCollider</title>
      <link>http://madskjeldgaard.dk/how-to-change-the-default-synth-in-supercollider/</link>
      <pubDate>Fri, 18 Oct 2019 12:42:12 +0000</pubDate>
      
      <guid>http://madskjeldgaard.dk/how-to-change-the-default-synth-in-supercollider/</guid>
      <description>The default synth sound in SuperCollider is a cheesy old piano sound. If you have ever tried the event pattern examples in the documentation of SuperCollider or been in the process of testing some pattern specifics of your own, you will have heard this extremely unconvincing synthesizer:
A nice alternative: A triangle wave synth with a low pass filter Imagine a utopian world where the default cheese-piano-synth has been replaced by a nicer, kind of gameboy like synth.</description>
    </item>
    
    <item>
      <title>Introduction to SuperCollider, Notam 2019</title>
      <link>http://madskjeldgaard.dk/scintro-notam-2019/</link>
      <pubDate>Sun, 01 Sep 2019 12:54:46 +0000</pubDate>
      
      <guid>http://madskjeldgaard.dk/scintro-notam-2019/</guid>
      <description>Here you will find the material for the introductory workshop held at Notam, Oslo in late summer 2019.
The slides may be used as a sort of cheatsheet as well as notes for remembering the topics covered:
• An overview: What is SuperCollider and what can you do with it?
• The design and architecture of SuperCollider
• Language basics: syntax, variables, expressions and functions
• Learning resources: How to proceed from here</description>
    </item>
    
    <item>
      <title>Ambisonics tutorial: Binaural head rotation using Reaper, Hedrot and IEM Plugins</title>
      <link>http://madskjeldgaard.dk/ambisonics-tutorial-binaural-head-rotation-using-reaper-hedrot-and-iem-plugins/</link>
      <pubDate>Thu, 22 Aug 2019 08:56:36 +0000</pubDate>
      
      <guid>http://madskjeldgaard.dk/ambisonics-tutorial-binaural-head-rotation-using-reaper-hedrot-and-iem-plugins/</guid>
      <description>Hedrot is an inexpensive head rotator that you can build yourself and attach to any pair of head phones, based on a small microcontroller (a Teensy) with an attached sensor board that measures your head’s rotation, pitch, tilt, etc.
Using the Hedrot, you can monitor a binaural version of an ambisonic mix in a pair of headphones and be able to move your head around inside the sound field.
In this tutorial we will cover how to set up the Hedrot application to send it’s sensor data via OSC to Reaper to rotate our ambisonic mix with our head movements.</description>
    </item>
    
    <item>
      <title>SuperCollider tutorial: Mass producing SynthDefs</title>
      <link>http://madskjeldgaard.dk/supercollider-tutorial-mass-producing-synthdefs/</link>
      <pubDate>Mon, 19 Aug 2019 10:36:35 +0000</pubDate>
      
      <guid>http://madskjeldgaard.dk/supercollider-tutorial-mass-producing-synthdefs/</guid>
      <description>In SuperCollider, one of the most common ways of making sounds is by first defining a sort of recipe for a UGEN patch in a SynthDef and then from that recipe produce Synths that make sounds.
But when you write a SynthDef, the patch architecture cannot change after the definition (as opposed to changing arguments in the patch).
This becomes annoying when working with UGens that want to know the exact number of channels used, eg.</description>
    </item>
    
    <item>
      <title>SuperCollider tutorial: Easily render generative compositions as sound files using NRT</title>
      <link>http://madskjeldgaard.dk/supercollider-how-to-render-patterns-as-sound-files-using-nrt/</link>
      <pubDate>Mon, 05 Aug 2019 17:46:09 +0000</pubDate>
      
      <guid>http://madskjeldgaard.dk/supercollider-how-to-render-patterns-as-sound-files-using-nrt/</guid>
      <description>One of the many powerful features of SuperCollider is it’s ability to render sounds offline. This is called Non-Realtime Synthesis (NRT). NRT is for example useful for fast, offline processing of sounds, doing sound analysis or rendering generative compositions.
NRT works like this (normally): First you write a list of server OSC messages (stored in a Score usually) which will tell the (offline) server what to do at what point in time when you decide to render it.</description>
    </item>
    
  </channel>
</rss>