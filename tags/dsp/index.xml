<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>dsp on Mads Kjeldgaard</title>
    <link>http://madskjeldgaard.dk/tags/dsp/</link>
    <description>Recent content in dsp on Mads Kjeldgaard</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-uk</language>
    <lastBuildDate>Thu, 18 Mar 2021 22:09:08 +0100</lastBuildDate><atom:link href="http://madskjeldgaard.dk/tags/dsp/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Tutorial: How to write plugins for SuperCollider using C&#43;&#43;</title>
      <link>http://madskjeldgaard.dk/posts/supercollider-server-plugin-tutorial/</link>
      <pubDate>Thu, 18 Mar 2021 22:09:08 +0100</pubDate>
      
      <guid>http://madskjeldgaard.dk/posts/supercollider-server-plugin-tutorial/</guid>
      <description>My amazing workplace allowed me time during the Covid-19 lockdowns in Oslo to spend time improving my C++ and DSP skills. The result of this is a bunch of plugins for SuperCollider, some of which are already released as well as a trunk of Notam plugins that are to be announced.
The process of creating server plugins (aka UGens) for SuperCollider is one of the most fun and gratifying ways one can experiment with DSP and C++ in my opinion.</description>
    </item>
    
    <item>
      <title>Setting up and using the Daisy Seed DSP platform on Linux</title>
      <link>http://madskjeldgaard.dk/posts/daisy-setup/</link>
      <pubDate>Thu, 11 Mar 2021 09:20:36 +0100</pubDate>
      
      <guid>http://madskjeldgaard.dk/posts/daisy-setup/</guid>
      <description>I recently got hold of Electro-Smith&amp;rsquo;s powerful Daisy Seed microcontroller board for developing embedded DSP projects. Unfortunately, at the time of writing the libraries for it do not support Platformio fully which is normally my preferred way of working with microcontrollers but fortunately it&amp;rsquo;s pretty easy to setup and use using make. Here are my notes for doing that.
Install prerequisites (on Arch) yay -S dfu-util gcc-arm-none-eabi-bin Setup and build libraries From the root of your project:</description>
    </item>
    
  </channel>
</rss>
